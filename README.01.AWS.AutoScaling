1. Bastion to Another EC2 ssh 설정하기
   - pem 파일 copy to Bastion EC2
   - chmod 400 TBD.pem
   - ssh -i "TBD.pem" ec2-user@100.64.58.##

2. EC2 > AUTO SCALING > Create Launch Configuraion
   - Name          : launch-config-tomcat-1
   - AMI           : ami-03b42693dc6a7dc35
   - Instance Type : t3a.medium
   - User Data     : EC2 초기화 Script
   
       #!/bin/bash
       
       EC2_HOME=/home/ec2-user
       EC2_INIT_LOG_ROOT=${EC2_HOME}/ec2-init.root.log
       EC2_INIT_LOG_EC2_USER=${EC2_HOME}/ec2-init.ec2-user.log
       
       TOMCAT_GIT="https://github.com/meditch05/ec2_tomcat.git"
       
       ##########################################################################
       # EC2 - Start Init ( by root, default )
       ##########################################################################
       echo "`uptime`"                          >> ${EC2_INIT_LOG_ROOT}
       echo "`date` - Init Start by (`whoami`)" >> ${EC2_INIT_LOG_ROOT}
       chmod 666 ${EC2_INIT_LOG_ROOT}
       
       ##########################################################################
       # EC2 - Install package ( by root, default )
       ##########################################################################
       echo "`date` - yum install Start (`whoami`)" >> ${EC2_INIT_LOG_ROOT}
       
       yum install -y jq-devel.x86_64 \
       			git             \
       			java-1.8.0-openjdk-devel.x86_64 \
       			| tee -a ${EC2_INIT_LOG_ROOT}
       					
       timedatectl set-timezone Asia/Seoul | tee -a ${EC2_INIT_LOG_ROOT}
       
       echo "`date` - yum install Ended (`whoami`)" >> ${EC2_INIT_LOG_ROOT}
       
       ##########################################################################
       # EC2 - Get Tomcat Engine ( by root, default )
       ##########################################################################
       echo "`date` - Tomcat install Start (`whoami`)" >> ${EC2_INIT_LOG_EC2_USER}
       
       mkdir git
       cd git
       git clone ${TOMCAT_GIT}
       
       cd ec2_tomcat
       tar -zxvf tomcat.tar.gz
       cp -Rp tomcat ${EC2_HOME}
       chown -R ec2-user:ec2-user ${EC2_HOME}
       sudo cp .bash_profile ${EC2_HOME}
       
       echo "echo `date` - Tomcat install Ended (`whoami`)" >> ${EC2_INIT_LOG_EC2_USER}
       
       ##########################################################################
       # EC2 - start Tomcat ( by ec2-user )
       ##########################################################################
       echo "`date` - Tomcat Start (`whoami`)" >> ${EC2_INIT_LOG_EC2_USER}
       
       su - ec2-user -c "cd /home/ec2-user/tomcat/servers/aws_test/shl; ./start.sh"
       
       echo "`date` - Tomcat Started (`whoami`)" >> ${EC2_INIT_LOG_EC2_USER}
       
       ##########################################################################
       # EC2 - End Init ( by root, default )
       ##########################################################################
       echo "`date` - Init Ended" >> ${EC2_INIT_LOG_ROOT}


   - IP Address Type : Checked ( Assign a public IP address to every instance. )
   
   - Security groups : rac-ec2-tomcat ( 기존에 만들어 놓은 Security Group )
     # SSH   22 - From SKT OA / 집 PC 의 Public IP ( https://checkip.amazonaws.com/ )
     # TCP 8080 - From SKT OA / 집 PC 의 Public IP ( https://checkip.amazonaws.com/ )
     # TCP 8080 - From Private Subnet ( 100.64.58.0/24 )
	 
3. EC2 > AUTO SCALING > Create Launch Configuraion > Action > Create Auto Scaling group

   ( Step 1. Choose launch template or configuration )
   - Name   : asg-tomcat-1
   
   ( Step 2. Configure settings )
   - VPC    : 내꺼 VPC
   - Subnet : VPC 안에 Subnet ( Public Subnet 중에 2개 )
   
   ( Step 3. Configure advanced options )
   - Enable load balancing : Checked
     # Target Group      : Create a target group ( targetgroup-tocmat-1 ) 
     # Target group name : targetgroup-tocmat-1
     # Target type       : Instance
     # Target Protocol   : HTTP
     # Target Port       : 8080

   - Monitoring   : Checked ( Enable group metrics collection within CloudWatch )
   
   ( Step 4. Configure group size and scaling policies )
   - Desired  capacity : 1
   - Minimize capacity : 1
   - Maximize capacity : 5
   - Scaling policies  : Target tracking scaling policy
     # Scaling policy name : CPU_Util_over_50
     # Metric type         : Average CPU Utilization
     # Target Value        : 50
     # Instances need      : 300 ( 300초 동안 CPU가 50%가 넘을때 )
	 
   ( Step 5. Add notifications )
   - Send a notification to : sns-topic-TomcatEc2-AutoScaling
   - With these recipients  : meditch05@sk.com
   
   ( Step 6. Tags )	 
   - Key / Value : Name / ASG-EC2-TOMCAT
   - Key / Value : owner / p069528 

4. EC2 > LOAD BALANCING > Create Load Balancers
   ( Step 1: Configure Load Balancer )
   - Type     : ALB   ( NLB로 하면 Target Group을 새로 만들고 EC2를 하나씩 지정해야함. )
   - Name     : nlb-ec2-tomcat
   - Schema   : internal ( Public 으로 열꺼면 internet-facing )
   - Listener : HTTP / 8080 ( EC2에서 Tomcat이 사용하는 Listen Port )
   - Availability Zones : Tomcat이 올라갈 SubNet들 선택

   ( Step 2: Configure Security Settings )
   - NEXT

   ( Step 3: Configure Security Groups )
   - Configure Security Groups : rac-ec2-tomcat ( 2에서 만든Security Group - 8080 으로 Listne   )

   ( Step 4: Configure Routing )
   - Target group : Existing Target Group ( NLB로 하면 이게 안나옴 )   
   - Name         : target-group-ec2-tomcat ( 3에서만든 Target Group )

   ( Step 5: Register Targets )
   - NEXT

   ( 설정 확인 )
   - ALB DNS name   : internal-nlb-ec2-tomcat-198281438.ap-northeast-2.elb.amazonaws.com
   - ALB Status 대기: Provisioning => Active로 바뀌어야함 

   ( Bastion에서확인 )
   # nslookup internal-nlb-ec2-tomcat-198281438.ap-northeast-2.elb.amazonaws.com
   Server:         100.64.58.2
   Address:        100.64.58.2#53

   Non-authoritative answer:
   Name:   internal-nlb-ec2-tomcat-198281438.ap-northeast-2.elb.amazonaws.com
   Address: 100.64.58.48
   Name:   internal-nlb-ec2-tomcat-198281438.ap-northeast-2.elb.amazonaws.com
   Address: 100.64.58.18

   # curl internal-nlb-ec2-tomcat-198281438.ap-northeast-2.elb.amazonaws.com:8080



